services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: recipe-api-prod:latest
    container_name: recipe-api-prod
    ports:
      - "8000:8000"
    env_file:
      - .env.prod
    environment:
      POSTGRES_USER: ${PROD_POSTGRES_USER}
      POSTGRES_PASSWORD: ${PROD_POSTGRES_PASSWORD}
      POSTGRES_DB: ${PROD_POSTGRES_DB}
      POSTGRES_HOST: ${PROD_POSTGRES_HOST}
      POSTGRES_PORT: ${PROD_POSTGRES_PORT}
      DJANGO_SETTINGS_MODULE: ${PROD_DJANGO_SETTINGS_MODULE}
      DEBUG: ${PROD_DEBUG}
      ALLOWED_HOSTS: ${PROD_ALLOWED_HOSTS}
    depends_on:
      - db
    restart: unless-stopped

  db:
    image: postgres:15
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    env_file:
      - .env.prod
    environment:
      POSTGRES_USER: ${PROD_POSTGRES_USER}
      POSTGRES_PASSWORD: ${PROD_POSTGRES_PASSWORD}
      POSTGRES_DB: ${PROD_POSTGRES_DB}
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${PROD_POSTGRES_USER} -d ${PROD_POSTGRES_DB}",
        ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data_prod:
